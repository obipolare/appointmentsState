{"version":3,"sources":["components/Date.jsx","components/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["Date","pet","owner","date","time","symptoms","id","handleDelete","className","onClick","Form","createDate","useState","inputValue","setInputValue","error","setError","handleInputChange","target","name","value","onSubmit","e","preventDefault","trim","length","uuid","htmlFor","type","onChange","cols","rows","App","initialDates","JSON","parse","localStorage","getItem","dates","setDates","filter","el","console","log","titleOfAppointments","useEffect","setItem","stringify","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2d377f8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Date = ({pet, owner, date, time, symptoms,id, handleDelete}) => {\r\n    return (\r\n        <>\r\n          <div>\r\n            <p className=\"py-2 text-lg capitalize\"><b>pet:</b><span> { pet }</span></p>\r\n            <p className=\"py-2 text-lg capitalize\"><b>owner:</b><span> { owner }</span></p>\r\n            <p className=\"py-2 text-lg capitalize\"><b>date:</b><span> { date }</span></p>\r\n            <p className=\"py-2 text-lg capitalize\"><b>time:</b><span> { time }</span></p>\r\n            <p className=\"py-2 text-lg capitalize\"><b>symptoms:</b><span> { symptoms }</span></p>\r\n                <button className=\"w-full px-4 py-2 bg-blue-600 rounded\" onClick={()=> handleDelete(id)}>Erase Appointment &times;</button>\r\n          </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Date\r\n","import React,{useState} from 'react'\r\nimport {v4 as uuid} from 'uuid'\r\nconst Form = ({createDate}) => {\r\n\r\n  const [inputValue, setInputValue] = useState({\r\n    pet:'',\r\n    owner: '',\r\n    date:'',\r\n    time:'',\r\n    symptoms: '',\r\n  })\r\n\r\n  const [error, setError] = useState(false)\r\n  \r\n  const {pet, owner, date, time, symptoms} = inputValue\r\n\r\n  const handleInputChange= ({target:{name, value}}) => {\r\n    setInputValue({\r\n      ...inputValue,\r\n      [name] : value\r\n    })\r\n    \r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n      if(pet.trim().length === 0 ||\r\n        owner.trim().length === 0 ||\r\n        date.trim().length === 0 ||\r\n        time.trim().length === 0 ||\r\n        symptoms.trim().length === 0  )\r\n      return setError(true)\r\n      \r\n    setError(false)\r\n\r\n    inputValue.id = uuid()\r\n    \r\n    createDate(inputValue)\r\n\r\n      setInputValue({\r\n      pet:'',\r\n      owner: '',\r\n      date:'',\r\n      time:'',\r\n      symptoms: '',\r\n    })\r\n\r\n  }\r\n\r\n  return (\r\n    <fieldset className=\"p-4\">\r\n     {error && <h2 className=\"py-2 text-2xl font-bold text-center bg-red-500 rounded\">You need to write the inputs please!</h2>}\r\n      <legend className=\"text-4xl font-bold\">ADD Date</legend>\r\n      <form onSubmit={handleSubmit} className=\"\">\r\n        <label className=\"block py-2 text-xl\" htmlFor=\"pet\">Pet's name</label>\r\n        <input \r\n        className=\"w-full px-4 py-2 bg-gray-800 text-md\"\r\n        type=\"text\" id=\"pet\"\r\n        name=\"pet\"\r\n        value={pet}\r\n        onChange={handleInputChange}\r\n        />\r\n        \r\n\r\n        <label className=\"block py-2 text-xl\" htmlFor=\"pet\">Owner's name</label>\r\n        <input \r\n        className=\"w-full px-4 py-2 bg-gray-800 text-md\"\r\n        type=\"text\" id=\"owner\"\r\n        name=\"owner\"\r\n        value={owner}\r\n        onChange={handleInputChange}\r\n        />\r\n\r\n        <label className=\"block py-2 text-xl\" htmlFor=\"date\">Date</label>\r\n        <input \r\n        className=\"w-full px-4 py-2 bg-gray-800 text-md\"\r\n        type=\"date\" id=\"date\"\r\n        name=\"date\"\r\n        value={date}\r\n        onChange={handleInputChange}\r\n        />\r\n\r\n        <label className=\"block py-2 text-xl\" htmlFor=\"time\">What time?</label>\r\n        <input \r\n        className=\"w-full px-4 py-2 bg-gray-800 text-md\"\r\n        type=\"time\" id=\"time\"\r\n        name=\"time\"\r\n        value={time}\r\n        onChange={handleInputChange}\r\n        />\r\n\r\n        <label className=\"block py-2 text-xl\" htmlFor=\"symptoms\">Symptoms</label>\r\n        <textarea className=\"w-full h-20 px-4 py-2 bg-gray-800 resize-none text-md\" id=\"symptoms\" cols=\"30\" rows=\"10\"\r\n        name=\"symptoms\"\r\n        value={symptoms}\r\n        onChange={handleInputChange}\r\n        ></textarea>\r\n        <button className=\"w-full px-4 py-2 bg-green-700 rounded \" type=\"submit\">Send info!</button>\r\n      </form>\r\n    </fieldset>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Date from \"./components/Date\";\r\nimport Form from \"./components/Form\";\r\n\r\nconst App = () => {\r\n  let initialDates = JSON.parse(localStorage.getItem(\"dates\"));\r\n\r\n  !initialDates\r\n    ? (initialDates = [])\r\n    : JSON.parse(localStorage.getItem(\"dates\"));\r\n\r\n  const [dates, setDates] = useState(initialDates);\r\n\r\n  const createDate = (date) => {\r\n    setDates([...dates, date]);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const date = dates.filter((el) => el.id !== id);\r\n    setDates(date);\r\n  };\r\n  console.log(dates);\r\n  const titleOfAppointments =\r\n    dates.length === 0\r\n      ? \"There's no appointments!\"\r\n      : \"Manage your appointments\";\r\n\r\n  useEffect(() => {\r\n    dates && localStorage.setItem(\"dates\", JSON.stringify(dates));\r\n  }, [dates]);\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"py-2 text-4xl text-center\">Patients!</h1>\r\n      <section className=\"grid w-11/12 grid-cols-1 gap-2 m-2 mx-auto mt-12 lg:grid-cols-2\">\r\n        <article className=\"\">\r\n          <Form createDate={createDate} />\r\n        </article>\r\n        <article className=\"flex flex-col \">\r\n          <h2 className=\"text-3xl font-bold text-center uppercase sm:text-4xl\">\r\n            {titleOfAppointments}\r\n          </h2>\r\n          <div className=\"p-4 m-2 bg-gray-800 rounded\">\r\n            {dates.map((el) => (\r\n              <Date key={el.id} {...el} handleDelete={handleDelete} />\r\n            ))}\r\n          </div>\r\n        </article>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}